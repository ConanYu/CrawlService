syntax = "proto3";

package crawl_service;

message GetUserContestRecordRequest {
    string platform = 1;
    string handle = 2; // 用户名
}

message UserContestRecord {
    string profile_url = 1; // 用户页面URL
    int32 rating = 2; // 当前rating 没有参加过则为0
    int32 length = 3; // 参加比赛场次
    message Record {
        string name = 1; // 比赛名称
        string url = 2; // 比赛链接
        int64 timestamp = 3; // 比赛时间 单位：秒
        int32 rating = 4; // 结果rating
    }
    repeated Record record = 4;
    string platform = 5;
    string handle = 6; // 用户名
}

message GetUserSubmitRecordRequest {
    string platform = 1;
    string handle = 2; // 用户名
}

message UserSubmitRecord {
    string profile_url = 1; // 用户页面URL
    int32 accept_count = 2; // 用户总AC数
    int32 submit_count = 3; // 用户总提交数
    map<int32, int32> distribution = 4; // 做题难度分布 有的平台才有
    map<string, int32> oj_distribution = 5; // OJ做题分布 只有vjudge有
    string platform = 6;
    string handle = 7;
}

message GetRecentContestRequest {
    string platform = 1;
}

message RecentContest {
    message ContestMessage {
        string name = 1; // 比赛名称
        string url = 2; // 比赛地址
        int64 timestamp = 3; // 比赛开始时间 单位：秒
        map<string, string> ext_info = 4; // 额外信息
        int32 duration = 5; // 比赛时长 单位：秒
    }
    repeated ContestMessage recent_contest = 1;
    string platform = 2;
}

message MGetUserContestRecordRequest {
    repeated GetUserContestRecordRequest get_user_contest_record_request = 1;
}

message MGetUserContestRecordResponse {
    repeated UserContestRecord user_contest_record = 1;
}

message MGetUserSubmitRecordRequest {
    repeated GetUserSubmitRecordRequest get_user_submit_record_request = 1;
}

message MGetUserSubmitRecordResponse {
    repeated UserSubmitRecord user_submit_record = 1;
}

message MGetRecentContestRequest {
    repeated string platform = 1;
}

message MGetRecentContestResponse {
    repeated RecentContest recent_contest = 1;
}

service CrawlService {
    rpc GetUserContestRecord (GetUserContestRecordRequest) returns (UserContestRecord);
    rpc GetUserSubmitRecord (GetUserSubmitRecordRequest) returns (UserSubmitRecord);
    rpc GetRecentContest (GetRecentContestRequest) returns (RecentContest);
    rpc MGetUserContestRecord (MGetUserContestRecordRequest) returns (MGetUserContestRecordResponse);
    rpc MGetUserSubmitRecord (MGetUserSubmitRecordRequest) returns (MGetUserSubmitRecordResponse);
    rpc MGetRecentContest (MGetRecentContestRequest) returns (MGetRecentContestResponse);
}
